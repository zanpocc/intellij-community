<!--
 This build script compiles, build distribution archives and run tests in IntelliJ IDEA Community Edition. Build process can be customized
 via options, see org.jetbrains.intellij.build.BuildOptions and org.jetbrains.intellij.build.TestingOptions classes for details. System properties
 from these classes can be passed as Ant properties in the command line, e.g. run 'ant -Dintellij.build.output.root=/path/to/dir' to
 specify custom output directory.

 Note that this script is for building IntelliJ IDEA Community Edition only. If you want to build your own product based on IntelliJ Platform,
 create a gant script for it, see javadoc for org.jetbrains.intellij.build package for details.
 -->

<!--一个Build文件一个Project标签,一个Project多个target标签,默认执行build这个target标签-->
<!--target可以选择性执行,也可以通过depens来顺序执行-->
<project name="IntelliJ IDEA Community Edition" default="build">
  <property name="project.home" value="${basedir}"/>

  <!--初始化阶段-->
  <target name="init">
    <!--如果设置了os为windows则给gradle.executable赋值为value-->
    <condition property="gradle.executable" value="${project.home}/build/dependencies/gradlew.bat"
               else="${project.home}/build/dependencies/gradlew">
      <os family="windows"/>
    </condition>

    <!--执行./build/dependencies/gradlew命令,下载工程相关依赖-->
    <exec executable="${gradle.executable}" dir="${project.home}/build/dependencies" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}"/>
      <arg value="--no-daemon"/>
      <arg value="setupKotlinCompiler"/>
    </exec>

    <!--定义一个属性集合-->
    <propertyset id="intellij.build.properties">
      <propertyref name="build.number"/>
      <propertyref name="compile.parallel"/>
      <propertyref prefix="intellij.build."/>
    </propertyset>
  </target>

  <!--宏定义调用gant-->
  <macrodef name="call_gant">
    <!--宏参数定义：1、ant的脚本路径 2、ant的target-->
    <attribute name="script" />
    <attribute name="target" default="default"/>

    <!--执行的顺序任务集合-->
    <sequential>
      <!--java -Xmx1500m -jar ant-launcher.jar -f gant.xml -->
      <java failonerror="true" jar="${project.home}/lib/ant/lib/ant-launcher.jar" fork="true">
        <jvmarg line="-Xmx1500m"/>
        <sysproperty key="jna.nosys" value="true" />
        <sysproperty key="java.awt.headless" value="true"/>
        <sysproperty key="gant.script" value="@{script}"/>
        <sysproperty key="gant.target" value="@{target}"/>
        <syspropertyset refid="intellij.build.properties"/>
        <arg value="-f"/>
        <arg value="${project.home}/build/gant.xml"/>
      </java>
    </sequential>
  </macrodef>

  <!-- build distribution archives for IntelliJ Community Edition in out/idea-ce/artifacts directory -->
  <!--构建阶段,依赖初始化阶段完成-->
  <target name="build" depends="init">
    <call_gant script="${project.home}/build/scripts/idea_community.gant"/>
  </target>

  <!--测试阶段,依赖初始化阶段完成-->
  <target name="test" depends="init">
    <call_gant script="${project.home}/build/scripts/tests_in_community.gant"/>
  </target>

  <!-- Creates an updater-full.jar in ${intellij.build.output.root}/artifacts, it includes 'intellij.platform.updater' module with all its dependencies-->
  <!--创建一个updater-full.jar在${intellij.build.output.root}/artifacts目录下,它包含intellij.platform.updater模块及其所有的依赖-->
  <target name="fullupdater" depends="init">
    <call_gant script="${project.home}/build/scripts/idea_community.gant" target="updater-full"/>
  </target>
</project>
